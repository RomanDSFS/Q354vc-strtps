import { Startup } from "@/types/startup";

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π fetch —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
async function apiFetch<T>(url: string, options?: RequestInit): Promise<T> {
  const token = localStorage.getItem("token");

  const res = await fetch(url, {
    headers: {
      "Content-Type": "application/json",
      ...(token ? { Authorization: `Bearer ${token}` } : {}),
      ...options?.headers,
    },
    ...options,
  });

  if (!res.ok) {
    const errorText = await res.text();
    throw new Error(`API error: ${res.status} - ${errorText}`);
  }

  return res.json();
}

// ‚úÖ –£—Ç–∏–ª–∏—Ç–∞: –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —á–µ–∫–∞ (–ø–æ–¥–¥–µ—Ä–∂–∫–∞ string | string[])
const normalizeCheck = (check: string | string[] | undefined): number => {
  if (!check) return 0;
  const raw = Array.isArray(check) ? check[0] : check;
  return parseFloat(raw.replace(/[^\d.]/g, "")) || 0;
};

// ‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞
export async function saveInvestorProfile(filters: {
  investor_type: string;               // –ø–æ-–ø—Ä–µ–∂–Ω–µ–º—É –æ–¥–∏–Ω
  investment_stage: string[];
  industry: string[];
  region: string[];
  checkSize: string | string[] | undefined; // —Ç–µ–ø–µ—Ä—å –±–µ–∑–æ–ø–∞—Å–Ω–æ
}) {
  const payload = {
    investor_type: filters.investor_type ? [filters.investor_type] : [],
    investment_stage: filters.investment_stage,
    industry: filters.industry,
    region: filters.region,
    min_check: normalizeCheck(filters.checkSize), // ‚úÖ –±–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
  };
  console.log("üì§ Payload:", payload); // –ª–æ–≥ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  
  return apiFetch("/api/startups/investors/profile", {
    method: "POST",
    body: JSON.stringify(payload),
  });
}

// ‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤ –ø–æ investor_id
export async function fetchMatchedStartups(investorId: string) {
  return apiFetch<{ startups: Startup[] }>(`/api/startups/matches/me`).then(
    (res) => res.startups
  );
}

// üîπ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ä—Ç–∞–ø–∞ –≤ Due Diligence
export async function sendToDueDiligence(startupId: string) {
  return apiFetch<{ message: string }>(`/api/startups/select/${startupId}`, {
    method: "POST",
  });
}
// ‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞
export async function getInvestorProfile(investorId: string) {
  return apiFetch<{
    investor_type: string;
    investment_stage: string[];
    industry: string[];
    region: string[];
    min_check: number;
  }>(`/api/investors/profile/${investorId}`);
}
export { apiFetch };

